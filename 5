//5.	You are required to compute the power of a number by implementing a calculator.
// Create a class MyCalculator which consists of a single method long power(int, int). This method takes two integers, n  and p, as parameters and finds np.
// If either n or p is negative, then the method must throw an exception which says "n or p should not be negative".
// Also, if both n and p are zero, then the method must throw an exception which says "n and p should not be zero".
//For example, -4 and -5 would result in java.lang.Exception: n or p should not be negative.
//Complete the function power in class MyCalculator and return the appropriate result after the power operation or an appropriate exception as detailed above.
import java.util.Scanner;
import java.lang.Math;
class UserException extends Exception {
    UserException(String s) {

        super(s);
    }
}
class Code {
    int n;
    int p;
    public void longpower(int a,int b) throws UserException
    {
    try
    {
        if (n< 0 ||  p<0) {
            throw new UserException("n or p should not be negative");
        } else if(n==0 && p==0){
            System.out.println("n and p should not be zero");
        }
        else
        {
           double x=Math.pow(n,p);
        }
    }
    catch(UserException e)
    {
        e.printStackTrace();
    }
    }

    }
public class thr{
    public static void main(String[] args) throws UserException {
        Code t=new Code();
        Scanner sc= new Scanner(System.in);
        int a=sc.nextInt();
        int b=sc.nextInt();
        t.longpower(a,b);
    }
}
